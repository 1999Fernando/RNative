{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Fernando\\\\Desktop\\\\ReactCRUD\\\\screens\\\\login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport { Button } from 'react-native-elements';\nimport * as Google from 'expo-google-app-auth';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\n\nvar LoginScreen = function LoginScreen(props) {\n  var _useState = useState({\n    email: '',\n    pass: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var emailw = state.email;\n  var passw = state.pass;\n  var auth = firebase.auth();\n\n  var login = function login() {\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              auth.signInWithEmailAndPassword(emailw, passw);\n              auth.onAuthStateChanged(function (user) {\n                if (user) {\n                  alert('logeado');\n                  props.navigation.navigate('UsersList');\n                } else {\n                  props.navigation.navigate('login');\n                }\n              });\n            } catch (error) {\n              console.log('error');\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var signUp = function signUp() {\n    try {\n      console.log(emailw, passw);\n      auth.createUserWithEmailAndPassword(emailw, passw);\n      props.navigation.navigate('UsersList');\n    } catch (error) {\n      alert('Datos Incorrectos');\n    }\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.inputGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Email\",\n    onChangeText: function onChangeText(value) {\n      return setState(_objectSpread(_objectSpread({}, state), {}, {\n        email: value\n      }));\n    },\n    value: state.email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.inputGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    secureTextEntry: true,\n    placeholder: \"Contrase\\xF1a\",\n    onChangeText: function onChangeText(value) {\n      return setState(_objectSpread(_objectSpread({}, state), {}, {\n        pass: value\n      }));\n    },\n    value: state.pass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.inputGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    type: \"outline\",\n    title: \"Login\",\n    onPress: function onPress() {\n      return login();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    type: \"outline\",\n    title: \"Sign Up\",\n    onPress: function onPress() {\n      return signUp();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 35\n  },\n  inputGroup: {\n    flex: 1,\n    padding: 0,\n    marginBottom: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#cccccc\"\n  },\n  loader: {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  button: {\n    flex: 1,\n    padding: 4\n  },\n  buttonG: {\n    flex: 1,\n    padding: 4,\n    paddingTop: 15\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["C:/Users/Fernando/Desktop/ReactCRUD/screens/login.js"],"names":["React","useState","Button","Google","firebase","LoginScreen","props","email","pass","state","setState","emailw","passw","auth","login","signInWithEmailAndPassword","onAuthStateChanged","user","alert","navigation","navigate","error","console","log","signUp","createUserWithEmailAndPassword","styles","container","inputGroup","value","button","StyleSheet","create","flex","padding","marginBottom","borderBottomWidth","borderBottomColor","loader","left","right","top","bottom","position","alignItems","justifyContent","buttonG","paddingTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n//import {auth} from '../database/firebase'\r\nimport {Button} from 'react-native-elements'\r\nimport * as Google from 'expo-google-app-auth';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TextInput,\r\n  ScrollView,\r\n} from \"react-native\";\r\n\r\n\r\nconst LoginScreen = (props) => {\r\n\r\n  const [state, setState] = useState\r\n    ({\r\n        email: '',\r\n        pass: '',\r\n    });\r\n    var emailw = state.email\r\n    var passw = state.pass\r\n    const auth = firebase.auth();\r\n\r\n    const login = async () =>\r\n    {\r\n        try {\r\n            auth.signInWithEmailAndPassword(emailw,passw)\r\n            auth.onAuthStateChanged(user =>{\r\n              if(user)\r\n              {\r\n                alert('logeado')\r\n                props.navigation.navigate('UsersList')\r\n              }\r\n              else{\r\n                props.navigation.navigate('login')\r\n              }\r\n            })\r\n             \r\n        } catch (error) {\r\n          console.log('error')\r\n        }\r\n    };\r\n    const signUp = () =>\r\n    {\r\n       try {\r\n            console.log(emailw, passw)\r\n            auth.createUserWithEmailAndPassword(emailw,passw) \r\n            props.navigation.navigate('UsersList')\r\n        } catch (error) {\r\n           alert('Datos Incorrectos');\r\n        }\r\n        \r\n    };\r\n\r\n    /*const googleAuth = () =>\r\n    {\r\n      try {\r\n        const result =  Google.logInAsync({\r\n          androidClientId: '376997193593-5ifpk0ntnlkmd79j42dgnbd0p5tt702f.apps.googleusercontent.com',\r\n          scopes: ['profile', 'email'],\r\n        });\r\n    \r\n        if (result.type === 'success') {\r\n          return result.accessToken;\r\n        } else {\r\n          return { cancelled: true };\r\n        }\r\n      } catch (e) {\r\n        return { error: true };\r\n      }\r\n        /*const provider = new firebase.auth.GoogleAuthProvider();\r\n        auth.signInWithPopup(provider).then(res=>{console.log('google')})\r\n        \r\n    }*/\r\n    return (\r\n    <ScrollView style={styles.container}>\r\n            {/* Email Input */}\r\n            <View style={styles.inputGroup}>\r\n                <TextInput\r\n                placeholder=\"Email\"\r\n                onChangeText={(value) => setState({...state,email: value})}\r\n                value={state.email}\r\n                \r\n                />\r\n            </View>\r\n            {/* Pass Input */}\r\n            <View style={styles.inputGroup}>\r\n                <TextInput\r\n                secureTextEntry={true}\r\n                placeholder=\"Contraseña\"\r\n                onChangeText={(value) => setState({...state,pass: value})}\r\n                value={state.pass}\r\n                />\r\n            </View>\r\n            <View style={styles.inputGroup}>\r\n                <View style={styles.button}>\r\n                    <Button type=\"outline\" title=\"Login\" onPress={() => login()} />\r\n                </View>\r\n            \r\n                <View style={styles.button}>\r\n                    <Button type=\"outline\" title=\"Sign Up\" onPress={() => signUp()} />\r\n                </View>\r\n            </View>\r\n\r\n            {/*<View style={styles.buttonG}>\r\n                <Button type=\"solid\" title=\"Google\" onPress={() => googleAuth()} />\r\n            </View>*/}\r\n            \r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 35\r\n  },\r\n  inputGroup: {\r\n    flex: 1,\r\n    padding: 0,\r\n    marginBottom: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#cccccc\",\r\n  },\r\n  loader: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: \"absolute\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  button: {\r\n    flex: 1,\r\n    padding: 4,\r\n  },\r\n  buttonG: {\r\n    flex: 1,\r\n    padding: 4,\r\n    paddingTop: 15,\r\n  }\r\n});\r\n\r\nexport default LoginScreen;\r\n/*\r\nconst Login = (props) => {\r\n    const [email,setEmail] = useState('')\r\n    const [pass,setPass] = useState('')\r\n\r\n    const registrarUsuario = (e) => {\r\n        e.preventDefault()\r\n        auth.createUserWithEmailAndPassword(email,pass)\r\n        .then((res) => alert('Usuario Refistrado'))\r\n    }\r\n    return(\r\n        <ScrollView style={styles.container}>\r\n            {/* Email Input *//*}\r\n            <View style={styles.inputGroup}>\r\n                <TextInput\r\n                placeholder=\"email\"\r\n                className = \"form-control mb-3\" type = \"email\"\r\n                onChangeText={(e) =>{setEmail(e.target.value)}}\r\n                />\r\n            </View>\r\n            {/* Pass Input *//*}\r\n            <View style={styles.inputGroup}>\r\n                <TextInput\r\n                placeholder=\"contraseña\"\r\n                onChangeText={(e) =>{setPass(e.target.value)}}\r\n                type = \"password\"\r\n                />\r\n            </View>\r\n            <View style={styles.button}>\r\n                <Button title=\"Save User\" onPress={() => registrarUsuario()} />\r\n            </View>\r\n\r\n        </ScrollView>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nexport default Login;*/"]},"metadata":{},"sourceType":"module"}