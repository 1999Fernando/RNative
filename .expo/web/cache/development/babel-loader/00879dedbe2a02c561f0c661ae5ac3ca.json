{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Fernando\\\\Desktop\\\\ReactCRUD\\\\screens\\\\UserDetailScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport firebase from \"../database/firebase\";\nimport firebase2 from 'firebase/app';\nimport 'firebase/auth';\n\nvar UserDetailScreen = function UserDetailScreen(props) {\n  var initialState = {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  };\n\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var handleTextChange = function handleTextChange(value, prop) {\n    setUser(_objectSpread(_objectSpread({}, user), {}, _defineProperty({}, prop, value)));\n  };\n\n  var getUserById = function getUserById(id) {\n    var dbRef, doc, user;\n    return _regeneratorRuntime.async(function getUserById$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dbRef = firebase.db.collection(\"users\").doc(id);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(dbRef.get());\n\n          case 3:\n            doc = _context.sent;\n            user = doc.data();\n            setUser(_objectSpread(_objectSpread({}, user), {}, {\n              id: doc.id\n            }));\n            setLoading(false);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var deleteUser = function deleteUser() {\n    var dbRef;\n    return _regeneratorRuntime.async(function deleteUser$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setLoading(true);\n            dbRef = firebase.db.collection(\"users\").doc(props.route.params.userId);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(dbRef.delete());\n\n          case 4:\n            setLoading(false);\n            props.navigation.navigate(\"UsersList\");\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var openConfirmationAlert = function openConfirmationAlert() {\n    Alert.alert(\"Removing the User\", \"Are you sure?\", [{\n      text: \"Yes\",\n      onPress: function onPress() {\n        return deleteUser();\n      }\n    }, {\n      text: \"No\",\n      onPress: function onPress() {\n        return console.log(\"canceled\");\n      }\n    }], {\n      cancelable: true\n    });\n  };\n\n  var updateUser = function updateUser() {\n    var userRef;\n    return _regeneratorRuntime.async(function updateUser$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            userRef = firebase.db.collection(\"users\").doc(user.id);\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(userRef.set({\n              name: user.name,\n              email: user.email,\n              phone: user.phone\n            }));\n\n          case 3:\n            setUser(initialState);\n            props.navigation.navigate(\"UsersList\");\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getUserById(props.route.params.userId);\n  }, []);\n\n  if (loading) {\n    return React.createElement(View, {\n      style: styles.loader,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#9E9E9E\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  firebase2.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Name\",\n        autoCompleteType: \"username\",\n        style: styles.inputGroup,\n        value: user.name,\n        onChangeText: function onChangeText(value) {\n          return handleTextChange(value, \"name\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        autoCompleteType: \"email\",\n        placeholder: \"Email\",\n        style: styles.inputGroup,\n        value: user.email,\n        onChangeText: function onChangeText(value) {\n          return handleTextChange(value, \"email\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Phone\",\n        autoCompleteType: \"tel\",\n        style: styles.inputGroup,\n        value: user.phone,\n        onChangeText: function onChangeText(value) {\n          return handleTextChange(value, \"phone\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.btn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        title: \"Delete\",\n        onPress: function onPress() {\n          return openConfirmationAlert();\n        },\n        color: \"#E37399\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        title: \"Update\",\n        onPress: function onPress() {\n          return updateUser();\n        },\n        color: \"#19AC52\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      })));\n    } else {\n      alert('usuario no registrado');\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 35\n  },\n  loader: {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputGroup: {\n    flex: 1,\n    padding: 0,\n    marginBottom: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#cccccc\"\n  },\n  btn: {\n    marginBottom: 7\n  }\n});\nexport default UserDetailScreen;","map":{"version":3,"sources":["C:/Users/Fernando/Desktop/ReactCRUD/screens/UserDetailScreen.js"],"names":["React","useEffect","useState","TextInput","firebase","firebase2","UserDetailScreen","props","initialState","id","name","email","phone","user","setUser","loading","setLoading","handleTextChange","value","prop","getUserById","dbRef","db","collection","doc","get","data","deleteUser","route","params","userId","delete","navigation","navigate","openConfirmationAlert","Alert","alert","text","onPress","console","log","cancelable","updateUser","userRef","set","styles","loader","auth","onAuthStateChanged","container","inputGroup","btn","StyleSheet","create","flex","padding","left","right","top","bottom","position","alignItems","justifyContent","marginBottom","borderBottomWidth","borderBottomColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ScrollView,\r\n  Button,\r\n  View,\r\n  Alert,\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n} from \"react-native\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\n\r\nimport firebase from \"../database/firebase\";\r\nimport firebase2 from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst UserDetailScreen = (props) => {\r\n  const initialState = {\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  };\r\n\r\n  const [user, setUser] = useState(initialState);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const handleTextChange = (value, prop) => {\r\n    setUser({ ...user, [prop]: value });\r\n  };\r\n\r\n  const getUserById = async (id) => {\r\n    const dbRef = firebase.db.collection(\"users\").doc(id);\r\n    const doc = await dbRef.get();\r\n    const user = doc.data();\r\n    setUser({ ...user, id: doc.id });\r\n    setLoading(false);\r\n  };\r\n\r\n  const deleteUser = async () => {\r\n    setLoading(true)\r\n    const dbRef = firebase.db\r\n      .collection(\"users\")\r\n      .doc(props.route.params.userId);\r\n    await dbRef.delete();\r\n    setLoading(false)\r\n    props.navigation.navigate(\"UsersList\");\r\n  };\r\n\r\n  const openConfirmationAlert = () => {\r\n    Alert.alert(\r\n      \"Removing the User\",\r\n      \"Are you sure?\",\r\n      [\r\n        { text: \"Yes\", onPress: () => deleteUser() },\r\n        { text: \"No\", onPress: () => console.log(\"canceled\") },\r\n      ],\r\n      {\r\n        cancelable: true,\r\n      }\r\n    );\r\n  };\r\n\r\n  const updateUser = async () => {\r\n    const userRef = firebase.db.collection(\"users\").doc(user.id);\r\n    await userRef.set({\r\n      name: user.name,\r\n      email: user.email,\r\n      phone: user.phone,\r\n    });\r\n    setUser(initialState);\r\n    props.navigation.navigate(\"UsersList\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserById(props.route.params.userId);\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loader}>\r\n        <ActivityIndicator size=\"large\" color=\"#9E9E9E\" />\r\n      </View>\r\n    );\r\n  }\r\n  firebase2.auth().onAuthStateChanged(function(user){\r\n    if(user){\r\n      return (\r\n        <ScrollView style={styles.container}>\r\n          <View>\r\n            <TextInput\r\n              placeholder=\"Name\"\r\n              autoCompleteType=\"username\"\r\n              style={styles.inputGroup}\r\n              value={user.name}\r\n              onChangeText={(value) => handleTextChange(value, \"name\")}\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              autoCompleteType=\"email\"\r\n              placeholder=\"Email\"\r\n              style={styles.inputGroup}\r\n              value={user.email}\r\n              onChangeText={(value) => handleTextChange(value, \"email\")}\r\n            />\r\n          </View>\r\n          <View>\r\n            <TextInput\r\n              placeholder=\"Phone\"\r\n              autoCompleteType=\"tel\"\r\n              style={styles.inputGroup}\r\n              value={user.phone}\r\n              onChangeText={(value) => handleTextChange(value, \"phone\")}\r\n            />\r\n          </View>\r\n          <View style={styles.btn}>\r\n            <Button\r\n              title=\"Delete\"\r\n              onPress={() => openConfirmationAlert()}\r\n              color=\"#E37399\"\r\n            />\r\n          </View>\r\n          <View>\r\n            <Button title=\"Update\" onPress={() => updateUser()} color=\"#19AC52\" />\r\n          </View>\r\n        </ScrollView>\r\n      );\r\n    }\r\n    else{\r\n      alert('usuario no registrado')\r\n    }\r\n  })\r\n  /**/\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 35,\r\n  },\r\n  loader: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: \"absolute\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputGroup: {\r\n    flex: 1,\r\n    padding: 0,\r\n    marginBottom: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#cccccc\",\r\n  },\r\n  btn: {\r\n    marginBottom: 7,\r\n  },\r\n});\r\n\r\nexport default UserDetailScreen;\r\n"]},"metadata":{},"sourceType":"module"}